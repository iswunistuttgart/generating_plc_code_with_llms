<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_Axes" Id="{b10de84b-d1ba-439b-9a48-b622571f5ce9}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Axes
VAR_INPUT
END_VAR
VAR_OUTPUT
	done : BOOL;
END_VAR
VAR
	_enable		: BOOL;
	swap	 	: BOOL;
	status 		: ST_AxesStatus;
	x_state, y_state, z_state, b_state, c_state, s_state : EN_AxisState;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[swap := NOT(swap);


GVL_Axes.TSNmastercontrolword_x.10 := swap;
GVL_Axes.TSNmastercontrolword_y.10 := swap;
GVL_Axes.TSNmastercontrolword_z.10 := swap;
GVL_Axes.TSNmastercontrolword_b.10 := swap;
GVL_Axes.TSNmastercontrolword_c.10 := swap;
GVL_Axes.TSNmastercontrolword_s.10	:= swap;

GVL_Axes.TSNmastercontrolword_x.14 := TRUE;
GVL_Axes.TSNmastercontrolword_y.14 := TRUE;
GVL_Axes.TSNmastercontrolword_z.14 := TRUE;
GVL_Axes.TSNmastercontrolword_b.14 := TRUE;
GVL_Axes.TSNmastercontrolword_c.14 := TRUE;
GVL_Axes.TSNmastercontrolword_s.14	:= TRUE;

IF _enable THEN
	GVL_Axes.TSNmastercontrolword_x.13 := TRUE;
	GVL_Axes.TSNmastercontrolword_y.13 := TRUE;
	GVL_Axes.TSNmastercontrolword_z.13 := TRUE;
	GVL_Axes.TSNmastercontrolword_b.13 := TRUE;
	GVL_Axes.TSNmastercontrolword_c.13 := TRUE;
	GVL_Axes.TSNmastercontrolword_s.13 := TRUE;
	
	GVL_Axes.TSNmastercontrolword_x.15 := TRUE;
	GVL_Axes.TSNmastercontrolword_y.15 := TRUE;
	GVL_Axes.TSNmastercontrolword_z.15 := TRUE;
	GVL_Axes.TSNmastercontrolword_b.15 := TRUE; 
	GVL_Axes.TSNmastercontrolword_c.15 := TRUE;
	GVL_Axes.TSNmastercontrolword_s.15 := TRUE;

ELSE
	
	GVL_Axes.TSNmastercontrolword_x.13 := FALSE;
	GVL_Axes.TSNmastercontrolword_y.13 := FALSE;
	GVL_Axes.TSNmastercontrolword_z.13 := FALSE;
	GVL_Axes.TSNmastercontrolword_b.13 := FALSE;
	GVL_Axes.TSNmastercontrolword_c.13 := FALSE;
	GVL_Axes.TSNmastercontrolword_s.13 := FALSE;
	
	GVL_Axes.TSNmastercontrolword_x.15 := FALSE;
	GVL_Axes.TSNmastercontrolword_y.15 := FALSE;
	GVL_Axes.TSNmastercontrolword_z.15 := FALSE;
	GVL_Axes.TSNmastercontrolword_b.15 := FALSE; 
	GVL_Axes.TSNmastercontrolword_c.15 := FALSE; 
	GVL_Axes.TSNmastercontrolword_s.15 := FALSE;
END_IF

IF TRUE THEN 	//Axes status
	IF GVL_Axes.drivestatusword_x.15 = 1 AND GVL_Axes.drivestatusword_x.14 = 1 AND GVL_Axes.drivestatusword_x.11 = 1 THEN
		GVL_Axes.AxesStatus.x := 'enabled';
		x_state := AX_ENABLED;
	ELSIF GVL_Axes.drivestatusword_x.15 = 0 (* AND GVL_Axes.drivestatusword_x.14 = 1*) AND GVL_Axes.drivestatusword_x.13 = 1 THEN
		GVL_Axes.AxesStatus.x := 'error';
		x_state := AX_ERROR;
	ELSIF GVL_Axes.drivestatusword_x.15 = 1 AND GVL_Axes.drivestatusword_x.14 = 0 AND GVL_Axes.drivestatusword_x.13 = 0 AND GVL_Axes.drivestatusword_x.11 = 1 THEN
		GVL_Axes.AxesStatus.x := 'voltage';
		x_state := AX_VOLTAGE;
	ELSIF GVL_Axes.drivestatusword_x.15 = 0 AND GVL_Axes.drivestatusword_x.14 = 1 AND GVL_Axes.drivestatusword_x.13 = 0 THEN
		GVL_Axes.AxesStatus.x := 'no voltage';
		x_state := AX_NO_VOLTAGE;
	END_IF	
	IF GVL_Axes.drivestatusword_y.15 = 1 AND GVL_Axes.drivestatusword_y.14 = 1 AND GVL_Axes.drivestatusword_y.11 = 1 THEN
		GVL_Axes.AxesStatus.y := 'enabled';
		y_state := AX_ENABLED;
	ELSIF GVL_Axes.drivestatusword_y.15 = 0 (* AND GVL_Axes.drivestatusword_y.14 = 1 *) AND GVL_Axes.drivestatusword_y.13 = 1 THEN
		GVL_Axes.AxesStatus.y := 'error';
		y_state := AX_ERROR;
	ELSIF GVL_Axes.drivestatusword_y.15 = 1 AND GVL_Axes.drivestatusword_y.14 = 0 AND GVL_Axes.drivestatusword_y.13 = 0 AND GVL_Axes.drivestatusword_y.11 = 1 THEN
		GVL_Axes.AxesStatus.y := 'voltage';
		y_state := AX_VOLTAGE;
	ELSIF GVL_Axes.drivestatusword_y.15 = 0 AND GVL_Axes.drivestatusword_y.14 = 1 AND GVL_Axes.drivestatusword_y.13 = 0 THEN
		GVL_Axes.AxesStatus.y := 'no voltage';
		y_state := AX_NO_VOLTAGE;
	END_IF
	IF GVL_Axes.drivestatusword_z.15 = 1 AND GVL_Axes.drivestatusword_z.14 = 1 AND GVL_Axes.drivestatusword_z.11 = 1 THEN
		GVL_Axes.AxesStatus.z := 'enabled';
		z_state := AX_ENABLED;
	ELSIF GVL_Axes.drivestatusword_z.15 = 0 (* AND GVL_Axes.drivestatusword_z.14 = 1 *) AND GVL_Axes.drivestatusword_z.13 = 1 THEN
		GVL_Axes.AxesStatus.z := 'error';
		z_state := AX_ERROR;
	ELSIF GVL_Axes.drivestatusword_z.15 = 1 AND GVL_Axes.drivestatusword_z.14 = 0 AND GVL_Axes.drivestatusword_z.13 = 0 AND GVL_Axes.drivestatusword_z.11 = 1 THEN
		GVL_Axes.AxesStatus.z := 'voltage';
		z_state := AX_VOLTAGE;
	ELSIF GVL_Axes.drivestatusword_z.15 = 0 AND GVL_Axes.drivestatusword_z.14 = 1 AND GVL_Axes.drivestatusword_z.13 = 0 THEN
		GVL_Axes.AxesStatus.z := 'no voltage';
		z_state := AX_NO_VOLTAGE;
	END_IF	
	IF GVL_Axes.drivestatusword_b.15 = 1 AND GVL_Axes.drivestatusword_b.14 = 1 AND GVL_Axes.drivestatusword_b.11 = 1 THEN
		GVL_Axes.AxesStatus.b := 'enabled';
		b_state := AX_ENABLED;
	ELSIF GVL_Axes.drivestatusword_b.15 = 0 (* AND GVL_Axes.drivestatusword_b.14 = 1 *) AND GVL_Axes.drivestatusword_b.13 = 1 THEN
		GVL_Axes.AxesStatus.b := 'error';
		b_state := AX_ERROR;
	ELSIF GVL_Axes.drivestatusword_b.15 = 1 AND GVL_Axes.drivestatusword_b.14 = 0 AND GVL_Axes.drivestatusword_b.13 = 0 AND GVL_Axes.drivestatusword_b.11 = 1 THEN
		GVL_Axes.AxesStatus.b := 'voltage';
		b_state := AX_VOLTAGE;
	ELSIF GVL_Axes.drivestatusword_b.15 = 0 AND GVL_Axes.drivestatusword_b.14 = 1 AND GVL_Axes.drivestatusword_b.13 = 0 THEN
		GVL_Axes.AxesStatus.b := 'no voltage';
		b_state := AX_NO_VOLTAGE;
	END_IF
	IF GVL_Axes.drivestatusword_c.15 = 1 AND GVL_Axes.drivestatusword_c.14 = 1 AND GVL_Axes.drivestatusword_c.11 = 1 THEN
		GVL_Axes.AxesStatus.c := 'enabled';
		c_state := AX_ENABLED;
	ELSIF GVL_Axes.drivestatusword_c.15 = 0 (* AND GVL_Axes.drivestatusword_c.14 = 1 *) AND GVL_Axes.drivestatusword_c.13 = 1 THEN
		GVL_Axes.AxesStatus.c := 'error';
		c_state := AX_ERROR;
	ELSIF GVL_Axes.drivestatusword_c.15 = 1 AND GVL_Axes.drivestatusword_c.14 = 0 AND GVL_Axes.drivestatusword_c.13 = 0 AND GVL_Axes.drivestatusword_c.11 = 1 THEN
		GVL_Axes.AxesStatus.c := 'voltage';
		c_state := AX_VOLTAGE;
	ELSIF GVL_Axes.drivestatusword_c.15 = 0 AND GVL_Axes.drivestatusword_c.14 = 1 AND GVL_Axes.drivestatusword_c.13 = 0 THEN
		GVL_Axes.AxesStatus.c := 'no voltage';
		c_state := AX_NO_VOLTAGE;
	END_IF	
	
	status := GVL_Axes.AxesStatus;		
END_IF

s_state := x_state;
IF x_state = AX_ENABLED AND y_state = AX_ENABLED AND z_state = AX_ENABLED AND b_state = AX_ENABLED AND c_state = AX_ENABLED AND s_state = AX_ENABLED THEN
	GVL_Axes.AllAxesEnabled := TRUE;
	GVL_Axes.AllAxesVoltage := TRUE;
	GVL_Axes.OneAxisError := FALSE;
ELSIF x_state = AX_VOLTAGE AND y_state = AX_VOLTAGE AND z_state = AX_VOLTAGE AND b_state = AX_VOLTAGE AND c_state = AX_VOLTAGE AND s_state = AX_VOLTAGE THEN
	GVL_Axes.AllAxesEnabled := FALSE;
	GVL_Axes.AllAxesVoltage := TRUE;
	GVL_Axes.OneAxisError := FALSE;
ELSIF x_state = AX_ERROR OR y_state = AX_ERROR OR z_state = AX_ERROR OR b_state = AX_ERROR OR c_state = AX_ERROR OR s_state = AX_ERROR THEN
	GVL_Axes.AllAxesEnabled := FALSE;
	GVL_Axes.AllAxesVoltage := FALSE;
	GVL_Axes.OneAxisError := TRUE;
ELSE
	GVL_Axes.AllAxesEnabled := FALSE;
	GVL_Axes.AllAxesVoltage := FALSE;
	GVL_Axes.OneAxisError := FALSE;
END_IF
IF NOT(x_state = AX_ENABLED) AND NOT(y_state = AX_ENABLED) AND NOT(z_state = AX_ENABLED) AND NOT(b_state = AX_ENABLED) AND NOT(c_state = AX_ENABLED) AND NOT(s_state = AX_ENABLED) THEN
	GVL_Axes.AllAxesDisabled := TRUE;
ELSE
	GVL_Axes.AllAxesDisabled := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="Enable" Id="{d33b851f-f0a5-4895-83ff-f331c839e688}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable' :='1'}
METHOD Enable : BOOL
VAR_INPUT
	inp_enable	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[_enable := inp_enable;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Axes">
      <LineId Id="10" Count="7" />
      <LineId Id="119" Count="0" />
      <LineId Id="18" Count="5" />
      <LineId Id="138" Count="0" />
      <LineId Id="24" Count="6" />
      <LineId Id="139" Count="0" />
      <LineId Id="31" Count="5" />
      <LineId Id="140" Count="0" />
      <LineId Id="37" Count="7" />
      <LineId Id="141" Count="0" />
      <LineId Id="45" Count="5" />
      <LineId Id="142" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="263" Count="0" />
      <LineId Id="266" Count="91" />
      <LineId Id="264" Count="0" />
    </LineIds>
    <LineIds Name="FB_Axes.Enable">
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>