<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="PRG_MainMachineControl" Id="{74a8f647-f109-4feb-9d2e-465e783b21cd}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_MainMachineControl
VAR
	bError 				: BOOL;
	ErrorType			: STRING;
	previousError		: STRING;
	bWarningMessage		: BOOL;
END_VAR
VAR_INPUT
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT GVL_FiveX.bEmergency THEN
	GVL_FiveX.MachineMode := MANUAL;
ELSE
	GVL_FiveX.MachineMode := EMERGENCY;
	GVL_FiveX.MachineStatus := ERROR;
	GVL_FiveX.errorType := 'EMERGENCY';
END_IF

IF NOT GVL_FiveX.bPower THEN
	Global_HMI.PLCAxisEnable := FALSE;
END_IF
IF GVL_FiveX.MachineStatus = INIT OR GVL_FiveX.MachineStatus = ERROR OR GVL_FiveX.MachineStatus = RESET THEN
	//Global_HMI.PLCAxisEnable := FALSE;  //Comment out if TestMode to Enable Axis in Init
END_IF


IF NOT GVL_FiveX.bPower AND NOT (GVL_FiveX.MachineStatus = INIT OR GVL_FiveX.MachineStatus = ERROR OR GVL_FiveX.MachineStatus = ERROR) THEN
	GVL_FiveX.MachineStatus := ERROR;
END_IF

IF GVL_FiveX.bError THEN
	GVL_FiveX.MachineStatus := ERROR;
END_IF



// TODO Was muss gemacht werden, wenn im laufenden Betrieb Schlüsselschalter geändert wird?
CASE GVL_FiveX.MachineStatus OF
	INIT:
		GVL_IO.machineStates[0].name := 'Machine';	
		GVL_IO.machineStates[0].state := 'INIT';		
		GVL_FiveX.st_LampColor := COLOR_YELLOW;
		IF GVL_FiveX.MachineMode = MANUAL THEN
			GVL_IO.bKeyPadUnlockManual := TRUE;
			GVL_FiveX.bManualWzw := GVL_IO.bEnableManualWzw;
			IF GVL_IO.bManualPreop AND GVL_FiveX.bPower THEN
				GVL_FiveX.MachineStatus := PREOP;
				GVL_FiveX.DoorStatus := MOVESTATE_PREOP;
				GVL_FiveX.pneumaticState := PNEU_PREOP;
				IF NOT(GVL_FiveX.bManualWzw) THEN
					GVL_FiveX.wzwState := WZW_PREOP;
				END_IF
			END_IF
		ELSIF GVL_FiveX.MachineMode = AUTOMATIC THEN
			GVL_IO.bKeyPadUnlockManual := FALSE;
			GVL_FiveX.bManualWzw := FALSE;
			IF GVL_FiveX.bPower THEN
				GVL_FiveX.MachineStatus := PREOP;
				GVL_FiveX.DoorStatus := MOVESTATE_PREOP;
				GVL_FiveX.pneumaticState := PNEU_PREOP;
				GVL_FiveX.wzwState := WZW_PREOP;
				// wait with enable bis zwischenkreis geladen, Reset von Achsen nötig?
				GLOBAL_HMI.PLCAxisEnable := TRUE;
			END_IF
		END_IF
		
		
	PREOP:
		GVL_IO.machineStates[0].state := 'PREOP';	
		GVL_FiveX.st_LampColor := COLOR_GREEN;
		//pBlink(Color1 := COLOR_YELLOW, Color2 := COLOR_GREEN);
		IF GLOBAL_HMI.PLCAxisEnable THEN
			IF NOT GVL_FiveX.bManualWzw THEN
				IF GVL_FiveX.DoorStatus = MOVESTATE_ENABLE AND GVL_FiveX.pneumaticState = PNEU_READY AND GVL_FiveX.wzwState = WZW_READY THEN
					GVL_FiveX.MachineStatus := READY;
				END_IF
			ELSE
				IF GVL_FiveX.DoorStatus = MOVESTATE_ENABLE AND GVL_FiveX.pneumaticState = PNEU_READY AND GVL_FiveX.wzwState = WZW_READY THEN
					GVL_FiveX.MachineStatus := READY;
				END_IF
			END_IF
		END_IF
		
	READY:
		GVL_IO.bManualPreop := FALSE;
		GVL_IO.machineStates[0].state := 'READY';	
		GVL_FiveX.st_LampColor := COLOR_GREEN;
		// ENABLE CNC
		// ADAPT SPEED AND CO
		IF GVL_FiveX.MachineMode = MANUAL THEN
			//
		ELSIF GVL_FiveX.MachineMode = AUTOMATIC THEN
			//
		END_IF
		
		
		
	OPERATION:
		GVL_IO.machineStates[0].state := 'OPERATION';	
		GVL_FiveX.st_LampColor := COLOR_BLUE;
		
		
	FINISHED:
		GVL_IO.machineStates[0].state := 'FINISHED';	
		pBlink(Color1 := COLOR_OFF, Color2 := COLOR_GREEN);	
		
		
	ERROR:
		GVL_IO.machineStates[0].state := 'ERROR';	
		GVL_FiveX.st_LampColor := COLOR_RED;
		bError := TRUE;
		ErrorType := GVL_FiveX.errorType; 
		IF Global_HMI.PLCReset THEN
			GVL_FiveX.MachineStatus := RESET;
		//	bError := FALSE;				//Bestandteil in RESET
		//	GVL_FiveX.bError := FALSE;
		END_IF
		
	RESET:
		GVL_IO.machineStates[0].state := 'RESET';	
		pBlink(Color1 := COLOR_YELLOW, Color2 := COLOR_RED);
		bError := FALSE;
		GVL_FiveX.bError := FALSE;
		previousError := GVL_FiveX.errorType;
		GVL_FiveX.MachineStatus := INIT; 
		
END_CASE

//TODO: Check/Test this error handling later
IF GVL_FiveX.bError AND NOT Global_HMI.PLCReset AND NOT(GVL_FiveX.MachineStatus = RESET) THEN
	GVL_FiveX.MachineStatus := ERROR;
END_IF



(*IF GVL_FiveX.MachineMode = MANUAL THEN
	CASE GVL_FiveX.MachineStatus OF
		INIT:
			//
			
		PREOP:
			//
			
		READY:
			//pMainWzw();
			
			
			
			IF GVL_FiveX.bExecuteWzw THEN
			//GVL_FiveX.intCommitTool :=  DINT_TO_WORD(fbDInfo._tool.tool_desc.tool_id.basic);
				pWzwHandling(intWzNumber := GVL_FiveX.intCommitTool);
			END_IF

		OPERATION:
			//Test
		FINISHED:
			//Test
		ERROR:
			bError := TRUE;
			ErrorType := GVL_FiveX.errorType; 
			
		RESET:
			pWzwHandling(intWzNumber := 0);
			GVL_FiveX.MachineStatus := INIT; 		
		
	END_CASE	

ELSIF GVL_FiveX.MachineMode = AUTOMATIC THEN
		CASE GVL_FiveX.MachineStatus OF
		INIT:				//Used to skip reference drive in pMainWZW, possibly useless
			GVL_IO.bKeyPadUnlockManual := FALSE;
			GVL_FiveX.MachineStatus := PREOP;
			GLOBAL_HMI.PLCAxisEnable := TRUE;		//TODO: Check if dangerous
		PREOP:
			IF NOT pReferenceDrive.bDONE THEN				//TODO: Change Reference Drive with pCheckMissingWz
				pReferenceDrive();
			END_IF
			//pCheckMissingWz();		//TODO: FIX SENSOR/SCHRITTE/SCHRITTMOTOR
			IF pReferenceDrive.bDONE AND PRG_FrontDoor.state = MOVESTATE_ENABLE THEN
				GVL_FiveX.MachineStatus := READY;
			END_IF
		READY:
			//pMainWzw();
			IF GVL_FiveX.bExecuteWzw THEN
			//GVL_FiveX.intCommitTool :=  DINT_TO_WORD(fbDInfo._tool.tool_desc.tool_id.basic);
				pWzwHandling(intWzNumber := GVL_FiveX.intCommitTool);
			END_IF
			
		OPERATION:
			//Test
		FINISHED:
			//Test
		ERROR:
			bError := TRUE;
			ErrorType := GVL_FiveX.errorType;
 
		RESET:
			pWzwHandling(intWzNumber := 0);
			GVL_FiveX.MachineStatus := INIT; 				
		
	END_CASE
	
END_IF*)]]></ST>
    </Implementation>
    <LineIds Name="PRG_MainMachineControl">
      <LineId Id="614" Count="1" />
      <LineId Id="619" Count="71" />
      <LineId Id="818" Count="0" />
      <LineId Id="691" Count="35" />
      <LineId Id="728" Count="80" />
      <LineId Id="361" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>